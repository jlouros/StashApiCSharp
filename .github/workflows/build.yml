name: Build

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

env:
  SOLUTION_NAME: Atlassian.Stash.sln
  UNIT_TEST_PROJECT_PATH: ./test/Atlassian.Stash.UnitTests/
  BUILD_OUTPUT_PATH: ./buildOutput
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_FEED: https://api.nuget.org/v3/index.json

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Determine change type
      id: bump
      uses: zwaldowski/match-label-action@v2
      with:
        allowed: major,minor,patch

    - name: Set version
      id: next_version
      uses: zwaldowski/semver-release-action@v2
      with:
        dry_run: true
        bump: ${{ steps.bump.outputs.match }}
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - run: echo "${{ steps.next_version.outputs.version }}"

    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore --output ${{ env.BUILD_OUTPUT_PATH }} "/p:Version=${{ steps.next_version.outputs.version }}"

    - name: Run unit tests
      run: dotnet test ${{ env.UNIT_TEST_PROJECT_PATH }} --no-restore --verbosity normal

    - name: Publish artifacts
      uses: actions/upload-artifact@v2
      with:
        name: generated-nuget-packages
        path: |
          ${{ env.BUILD_OUTPUT_PATH }}/*.nupkg
          ${{ env.BUILD_OUTPUT_PATH }}/*.snupkg

  publish:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v1
      with:
        name: generated-nuget-packages

    - name: Push to NuGet Feed
      run: dotnet nuget push ./generated-nuget-packages/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }}
